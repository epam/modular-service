services:
  wsgi:
    build: .
    image: public.ecr.aws/x4s4z8e1/syndicate/modular-service:5.4.0
    container_name: modular-service
    ports:
      - "8040:8040"
    environment:
      MODULAR_SERVICE_VAULT_ENDPOINT: http://vault:8200
      MODULAR_SERVICE_VAULT_TOKEN: ${MODULAR_SERVICE_VAULT_TOKEN:-token}
      MODULAR_SERVICE_MONGO_URI: "mongodb://${MODULAR_SERVICE_MONGO_USERNAME:-mongouser}:${MODULAR_SERVICE_MONGO_PASSWORD:-mongopassword}@mongo:27017/"
      MODULAR_SERVICE_MONGO_DATABASE: modular-service
      MODULAR_SDK_SERVICE_MODE: docker
      MODULAR_SDK_MONGO_DB_NAME: modular-service
      MODULAR_SDK_MONGO_URI: "mongodb://${MODULAR_SERVICE_MONGO_USERNAME:-mongouser}:${MODULAR_SERVICE_MONGO_PASSWORD:-mongopassword}@mongo:27017/"
      MODULAR_SDK_VAULT_TOKEN: ${MODULAR_SERVICE_VAULT_TOKEN:-token}
      MODULAR_SDK_VAULT_URL: http://vault:8200
    depends_on:
      - mongo
      - vault
    restart: always
  mongo:
    image: mongo:5.0.28
    container_name: mongo
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 30s
    #      start_interval: 5s  # in case this setting is supported it should become healthy must faster
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MODULAR_SERVICE_MONGO_USERNAME:-mongouser}"
      MONGO_INITDB_ROOT_PASSWORD: "${MODULAR_SERVICE_MONGO_PASSWORD:-mongopassword}"
    ports:
      - "27017:27017"
    restart: always
  vault:
    image: hashicorp/vault:1.17.2
    container_name: vault
    ports:
      - "8200:8200"
    volumes:
      - vault-data:/vault/file/
    configs:
      - source: vault_config
        target: /vault/config/config.hcl
      - source: vault_init
        target: /usr/local/bin/vault-init.sh
        mode: 0551
    environment:
      VAULT_ADDR: http://127.0.0.1:8200
      MY_VAULT_TOKEN: "${MODULAR_SERVICE_VAULT_TOKEN:-token}"
    cap_add:
      - IPC_LOCK
    entrypoint: /usr/local/bin/vault-init.sh
    restart: always
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--proxy", "off", "http://127.0.0.1:8200/v1/sys/health?standbyok=true"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
  #      start_interval: 5s  # in case this setting is supported it should become healthy must faster
volumes:
  vault-data:
  mongo-data:
configs:
  vault_config:
    content: |
      ui = true
      listener "tcp" {
        address     = "0.0.0.0:8200"
        tls_disable = 1
      }
      storage "file" {
        path = "/vault/file"
      }
      api_addr = "http://127.0.0.1:8200"
      disable_mlock = "true"
  vault_init:
    content: |
      #!/usr/bin/env sh
      set -e
      unseal () {
        vault operator unseal $(grep 'Key 1:' /vault/file/keys | awk '{print $$NF}')
        vault operator unseal $(grep 'Key 2:' /vault/file/keys | awk '{print $$NF}')
        vault operator unseal $(grep 'Key 3:' /vault/file/keys | awk '{print $$NF}')
      }
      init () { vault operator init > /vault/file/keys; }
      log_in () {
        export ROOT_TOKEN=$(grep 'Initial Root Token:' /vault/file/keys | awk '{print $$NF}')
        vault login "$$ROOT_TOKEN"
      }
      create_token () { vault token create -id "$$MY_VAULT_TOKEN"; }
      vault server -config=/vault/config/config.hcl &
      sleep 1
      if [ -s /vault/file/keys ]; then
        unseal
      else
        init
        unseal
        log_in
        create_token
      fi
      vault status > /vault/file/status
      wait